@page
@model BaoNH.ASM2.Web.Pages.Pizza.PizzaModel

<form method="post" class="form-inline mt-3 mb-3" id="pizzaForm">
    <div class="row">
        <input type="hidden" asp-for="NewProduct.ProductId" />
        <div class="form-group col-md-4">
            <label for="ProductName">Product Name:</label>
            <input type="text" asp-for="NewProduct.ProductName" id="ProductName" class="form-control" required />
            <div class="invalid-feedback" id="productNameValidation">Please enter a product name.</div>
        </div>
        <div class="form-group col-md-4">
            <label for="UnitPrice">Unit Price:</label>
            <input type="text" asp-for="NewProduct.UnitPrice" id="UnitPrice" class="form-control" required />
            <div class="invalid-feedback" id="unitPriceValidation">Please enter a unit price.</div>
        </div>
        <div class="form-group col-md-4">
            <label for="Category">Category:</label>
            <select asp-for="NewProduct.CategoryId" id="Category" class="form-control" required>
                <option value="">-- Select Category --</option>
                @if (ViewData["Categories"] is List<Repo.Entities.Category> categories)
                {
                    foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                }
            </select>
            <div class="invalid-feedback">Please choose a category.</div>
        </div>
    </div>
    <div class="form-group col-md-12 mt-3">
        <button type="submit" class="btn btn-success btn-block w-100">Create New</button>
    </div>
</form>

<table class="table mb-3">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Pizza of the Week</th>
            <th>Category</th>
            <th>Update</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            var category = Model.GetCategoryForProduct(product.CategoryId);
            <tr>
                <td>@product.ProductName</td>
                <td>@product.UnitPrice</td>
                <td>@category.Description</td>
                <td><input type="checkbox" /></td>
                <td>@category.CategoryName</td>
                <td>
                    <a href="/Pizza/UpdateProduct?id=@product.ProductId" class="btn btn-primary">Update</a>
                </td>
                <td>
                    <form method="post" onsubmit="return confirm('Are you sure you want to delete this product?');">
                        <button type="submit" asp-page-handler="Delete" asp-route-id="@product.ProductId" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.getElementById('pizzaForm').addEventListener('submit', function (event) {
        var categorySelect = document.getElementById('Category');
        if (!categorySelect.value) {
            categorySelect.classList.add('is-invalid');
            event.preventDefault();
        } else {
            categorySelect.classList.remove('is-invalid');
        }

        var productNameInput = document.getElementById('ProductName');
        var unitPriceInput = document.getElementById('UnitPrice');

        if (!productNameInput.value) {
            productNameInput.classList.add('is-invalid');
            event.preventDefault();
        } else {
            productNameInput.classList.remove('is-invalid');
        }

        if (!unitPriceInput.value) {
            unitPriceInput.classList.add('is-invalid');
            event.preventDefault();
        } else {
            unitPriceInput.classList.remove('is-invalid');
        }
    });
</script>
